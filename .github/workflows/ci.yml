name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-
            uv-${{ runner.os }}-

      - name: Sync dependencies (locked)
        run: uv sync --frozen

      - name: Lint & typecheck (ruff/black/mypy via uvx)
        run: |
          uvx ruff check .
          uvx ruff format --check .
          uvx black --check .
          uvx mypy --install-types --non-interactive .

      - name: Run tests with coverage (pytest)
        run: |
          uv run pytest -q --maxfail=1 --disable-warnings --cov=src/cryptosmarttrader --cov-report=xml --cov-report=html || uvx pytest -q --maxfail=1 --disable-warnings --cov=src/cryptosmarttrader --cov-report=xml --cov-report=html

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports-py${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
          retention-days: 30

      - name: Security audit (pip-audit)
        run: |
          uvx pip-audit