[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cryptosmarttrader"
version = "2.0.0"
description = "Enterprise-grade multi-agent cryptocurrency trading intelligence system"
authors = [
    {name = "CryptoSmartTrader Team", email = "info@cryptosmarttrader.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "streamlit>=1.28.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "plotly>=5.15.0",
    "ccxt>=4.0.0",
    "scikit-learn>=1.3.0",
    "xgboost>=1.7.0",
    "textblob>=0.17.0",
    "schedule>=1.2.0",
    "prometheus-client>=0.17.0",
    "psutil>=5.9.0",
    "openai>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "tenacity>=8.2.0",
    "aiohttp>=3.8.0",
    "dependency-injector>=4.41.0",
    "python-json-logger>=2.0.0",
    "hvac>=1.1.0",
    "trafilatura>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "memory-profiler>=0.61.0",
]

performance = [
    "cupy>=12.0.0",
    "numba>=0.57.0",
    "lightgbm>=4.0.0",
]

monitoring = [
    "grafana-client>=3.5.0",
    "pagerduty>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/cryptosmarttrader/v2"
Documentation = "https://cryptosmarttrader.readthedocs.io"
Repository = "https://github.com/cryptosmarttrader/v2.git"
"Bug Tracker" = "https://github.com/cryptosmarttrader/v2/issues"

[project.scripts]
cryptotrader = "app:main"

# Tool configurations
[tool.setuptools]
packages = ["core", "agents", "dashboards", "utils", "api", "config", "models", "data", "scripts", "tests"]

[tool.black]
line-length = 127
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | \.env
  | build
  | dist
  | logs
  | data/cache
  | data/exports
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["logs/*", "data/cache/*", "data/exports/*"]

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "E266", "E501", "W503", "F403", "F401"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".env",
    "logs",
    "data/cache",
    "data/exports"
]
max-complexity = 10

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=core",
    "--cov=agents",
    "--cov=dashboards",
    "--cov=utils",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.bandit]
exclude_dirs = ["tests", "logs", "data"]
skips = ["B101", "B601"]

[tool.coverage.run]
source = ["core", "agents", "dashboards", "utils"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/logs/*",
    "*/data/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
