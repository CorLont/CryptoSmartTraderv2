name: Security Scanning

on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  secrets-scan:
    name: Secrets Detection
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run pip-audit
        run: |
          uv run pip-audit \
            --format=json \
            --output=pip-audit-report.json \
            --desc

      - name: Run OSV Scanner
        uses: google/osv-scanner-action@v1
        with:
          scan-args: |-
            --output=osv-report.json
            --format=json
            ./

      - name: Upload vulnerability reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vulnerability-reports
          path: |
            pip-audit-report.json
            osv-report.json

  code-security:
    name: Code Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: uv sync --frozen

      - name: Run Bandit security linter
        run: |
          uv run bandit -r src/ \
            -f json \
            -o bandit-report.json \
            --severity-level medium

      - name: Run Safety check
        run: |
          uv run safety check \
            --json \
            --output safety-report.json || true

      - name: Upload security analysis
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-analysis
          path: |
            bandit-report.json
            safety-report.json

  license-scan:
    name: License Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: uv sync --frozen

      - name: Generate license report
        run: |
          uv run pip-licenses \
            --format=json \
            --output-file=licenses-report.json \
            --with-urls \
            --with-description

      - name: Check for GPL licenses
        run: |
          if uv run pip-licenses | grep -i "gpl"; then
            echo "⚠️ GPL licenses detected - review required"
            exit 1
          else
            echo "✅ No GPL licenses detected"
          fi

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: licenses-report.json