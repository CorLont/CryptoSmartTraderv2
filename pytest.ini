[tool:pytest]
# Pytest configuration for CryptoSmartTrader V2

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

[pytest]
addopts = -v --strict-markers --maxfail=3 --tb=short --cov=src/cryptosmarttrader --cov-report=term-missing --cov-report=html --cov-fail-under=70 -m "not experimental" --disable-warnings
markers =
    slow: langzame of resource-intensieve tests (skip in CI)
    integration: gebruikt externe API's of I/O operaties
    unit: snelle unit tests zonder externe dependencies
    smoke: basis functionaliteit tests voor CI/CD pipeline
    regression: tests voor eerder gevonden bugs en fixes
    performance: performance en timing gerelateerde tests
    security: security en vulnerability tests
    api: tests die externe API endpoints gebruiken
    ml: machine learning model tests
    trading: trading logic en financial calculations
    temporal: temporal validation en time-series tests
    dashboard: Streamlit dashboard tests
    api_key: tests requiring API keys or external authentication
    property: property-based tests using Hypothesis

# Async test configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = src/cryptosmarttrader
omit = 
    tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
    conftest.py
    */demo_*
    */experimental*
    */*_demo*
    */*experimental*
    */*_wip*
    */wip_*
    */*temp*
    */*backup*
    */*old*
    */*legacy*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov
title = CryptoSmartTrader Test Coverage

[coverage:xml]
output = coverage.xml