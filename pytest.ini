[tool:pytest]
# Pytest configuration for CryptoSmartTrader V2

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add project root to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=core
    --cov=agents
    --cov=config
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    --asyncio-mode=auto

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (medium speed, multiple components)
    contract: Contract tests (external APIs, slower)
    smoke: Smoke tests (basic functionality verification)
    performance: Performance tests (resource usage, timing)
    slow: Slow running tests (mark for optional execution)

# Async test configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = core, agents, config
omit = 
    tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov
title = CryptoSmartTrader Test Coverage

[coverage:xml]
output = coverage.xml