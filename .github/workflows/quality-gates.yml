name: Quality Gates

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main, develop ]

jobs:
  lint-check:
    name: Lint Check (Ruff)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: uv sync --frozen
      
    - name: Run Ruff linter
      run: |
        uv run ruff check . --output-format=github --exit-zero
        uv run ruff check . --statistics

  format-check:
    name: Format Check (Black)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: uv sync --frozen
      
    - name: Check code formatting
      run: |
        uv run black --check --diff .

  type-check:
    name: Type Check (MyPy)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: uv sync --frozen
      
    - name: Run type checking
      run: |
        uv run mypy src/ --ignore-missing-imports --show-error-codes

  security-check:
    name: Security Check (Bandit)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: uv sync --frozen
      
    - name: Run security scan
      run: |
        uv run bandit -r src/ -ll -f json -o bandit-report.json || true
        uv run bandit -r src/ -ll

  coverage-gate:
    name: Coverage Gate (≥70%)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: uv sync --frozen
      
    - name: Run tests with coverage enforcement
      run: |
        uv run pytest tests/ \
          --cov=src \
          --cov-report=term \
          --cov-report=xml \
          --cov-fail-under=70 \
          -v

  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      run: uv sync --frozen
      
    - name: Run dependency vulnerability scan
      run: |
        uv run pip-audit --format=json --output=audit-report.json || true
        uv run pip-audit --desc --summary

  quality-gate-summary:
    name: Quality Gate Summary
    runs-on: ubuntu-latest
    needs: [lint-check, format-check, type-check, security-check, coverage-gate, dependency-audit]
    if: always()
    
    steps:
    - name: Check quality gates
      run: |
        echo "Quality Gate Results:"
        echo "✅ Lint Check: ${{ needs.lint-check.result }}"
        echo "✅ Format Check: ${{ needs.format-check.result }}"
        echo "✅ Type Check: ${{ needs.type-check.result }}"
        echo "✅ Security Check: ${{ needs.security-check.result }}"
        echo "✅ Coverage Gate (≥70%): ${{ needs.coverage-gate.result }}"
        echo "✅ Dependency Audit: ${{ needs.dependency-audit.result }}"
        
    - name: Fail if any quality gate failed
      if: |
        needs.lint-check.result == 'failure' ||
        needs.format-check.result == 'failure' ||
        needs.type-check.result == 'failure' ||
        needs.security-check.result == 'failure' ||
        needs.coverage-gate.result == 'failure'
      run: |
        echo "❌ One or more quality gates failed"
        exit 1
        
    - name: Success summary
      if: |
        needs.lint-check.result == 'success' &&
        needs.format-check.result == 'success' &&
        needs.type-check.result == 'success' &&
        needs.security-check.result == 'success' &&
        needs.coverage-gate.result == 'success'
      run: |
        echo "✅ All quality gates passed successfully"