# Docker Compose configuration for CryptoSmartTrader V2
# Enterprise multi-service deployment with health checks

version: '3.8'

services:
  cryptosmarttrader:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: cryptosmarttrader:v2.0.0
    container_name: cryptosmarttrader-main
    restart: unless-stopped
    
    # Port mappings
    ports:
      - "5000:5000"   # Streamlit Dashboard
      - "8001:8001"   # Health API
      - "8000:8000"   # Metrics Server
    
    # Environment configuration
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      
    # Secret environment variables (override in .env file)
    env_file:
      - .env
    
    # Volume mounts for persistence
    volumes:
      - ./data:/app/data:rw
      - ./logs:/app/logs:rw
      - ./models:/app/models:rw
      - ./cache:/app/cache:rw
      - ./exports:/app/exports:rw
    
    # Health checks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    
    # Security configuration
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    
    # Networking
    networks:
      - cryptotrader-network
    
    # Dependencies
    depends_on:
      prometheus:
        condition: service_healthy
      
  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:v2.50.1
    container_name: cryptosmarttrader-prometheus
    restart: unless-stopped
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    networks:
      - cryptotrader-network

  # Grafana dashboard (optional)
  grafana:
    image: grafana/grafana-oss:10.3.3
    container_name: cryptosmarttrader-grafana
    restart: unless-stopped
    
    ports:
      - "3000:3000"
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning:ro
    
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    networks:
      - cryptotrader-network
    
    depends_on:
      prometheus:
        condition: service_healthy

# Network configuration
networks:
  cryptotrader-network:
    driver: bridge
    name: cryptotrader-net

# Volume configuration
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local